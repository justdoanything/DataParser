Maven 빌드로 .jar 생성 후 다른 프로젝트에서 import로 사용할 때, poi.jar 사용 못하던 문제
  - 에러내용 : Exception in thread "main" java.lang.NoClassDefFoundError: org/apache/poi/ss/usermodel/Workbook at Runner.MainClass.main(MainClass.java:46)
Caused by: java.lang.ClassNotFoundException: org.apache.poi.ss.usermodel.Workbook
	at java.net.URLClassLoader.findClass(Unknown Source)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	at sun.misc.Launcher$AppClassLoader.loadClass(Unknown Source)
	at java.lang.ClassLoader.loadClass(Unknown Source)
	... 1 more

  - 사용 dependency : 		
		<dependency>
		    <groupId>org.apache.poi</groupId>
		    <artifactId>poi-ooxml</artifactId>
		    <version>4.1.2</version>
		</dependency>
		
Resolve Step :
	1. maven build를 할 때 poi.jar가 포함이 안된건지, 아니면 다른 프로젝트에서 import를 사용할 때 제대로 참조를 못하는지 확인해봐야함.
		➡ YONGYVER.jar을 import한 프로젝트가 maven 프로젝트가 아니라서 안된건지 테스트
			❎ maven project로 변환 후 실행했는데 실패
    	➡ 다른 외부 jar (lombok, json)은 잘 동작하는지 테스트
			❎ poi.jar를 사용하지 않는 ObjectToInsertQuery Class로 테스트했으니 Gson Jar에서 NoClassDefError 받음
    	✅ Maven Project에서 사용하던 외부 jar는 Maven Build 시 자동으로 포함되지 않음을 확인.
    2. Maven Build 옵션 중 외부 lib를 포함하도록 하는 방법
	  => 
	- maven build를 할 때 poi가 제대로 됐는지 확인해봐야함
	  => 외부 프로젝트에서 YONGYVER.jar를 보면 pom.xml, pom.properties만 존재함. poi.jar가 명시적으로 있지 않음.
	  => 외부 프로젝트를 maven 프로젝트로 convert 하여 실행될 때 종속되있는 .jar의 pom.xml을 읽어서 필요한 dependency를 내려받는지 확인해봐야함
  * poi-ooxml은 다른 .jar와 다르게 WEB-INF 안에 maven 폴더가 존재하지 않음. (pom.xml, pom.properties)	  